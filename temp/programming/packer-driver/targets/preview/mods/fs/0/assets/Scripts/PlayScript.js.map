{"version":3,"sources":["file:///Users/naushad/BricksBreaker/assets/Scripts/PlayScript.ts"],"names":["_decorator","Component","Node","Sprite","Vec3","SpriteFrame","Prefab","instantiate","JsonAsset","Collider2D","Contact2DType","RigidBody2D","UITransform","Vec2","ccclass","property","BRICKS","PlayScript","start","posOfSlider","sliderSprite","getPosition","screenWidth","node","width","tileDetails","asset","level","json","console","log","fetchScript","wallLeft","getChildByName","wallRight","wallTop","setScale","getComponent","height","collider","ball","on","BEGIN_CONTACT","onBeginContact","ballInitialPosition","addBricks","lev","rows","columns","startXPos","startYPos","bricksWidthTemp","bricksHeightTemp","bricksPrefab","data","scaleFactor","selfCollider","otherCollider","contact","name","updateBricks","arrayOfBricksOnScreen","length","setTimeout","setPosition","linearVelocity","brickTime","spriteFrame","BrokenBricks","colorNumber","destroy","pop","moveSliderOnTouch","touch","event","current","getUILocation","x","y","onLoad","EventType","TOUCH_MOVE","i","type","posX","Math","floor","posY","ch","addChild","NormalBricks","push","IN_TWO_COLLISION","reward","IN_FOUR_COLLISION","HAS_REWARDS"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, SpriteComponent, Sprite, Vec3, UIComponent, UIModelComponent, SpriteFrame, Prefab, instantiate, JsonAsset, Collider2D, Contact2DType, IPhysics2DContact, PhysicsSystem2D, RigidBody, RigidBody2D, UITransform, rect, Vec2 } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n\r\n   /* \"1\" : \"show\",\r\n    \"2\" : \"hide\",\r\n    \"3\" : \"hide\",\r\n    \"4\" : \"hide\",\r\n    \"5\" : \"rewardType\",\r\n    \"6\" : \"show\",\r\n    \"7\" : \"hide\",\r\n    \"8\" : \"hide\",\r\n    \"9\" : \"rewardType\",\r\n    \"10\" : \"show\",\r\n    \"11\" : \"show\",\r\n    \"12\" : \"hide\",\r\n    \"13\" : \"rewardType\",\r\n    \"14\" : \"show\",\r\n    \"15\" : \"show\",\r\n    \"16\" : \"show\"\r\n    */\r\n/**\r\n * Predefined variables\r\n * Name = PlayScript\r\n * DateTime = Wed Sep 22 2021 13:48:26 GMT+0530 (India Standard Time)\r\n * Author = alokraj0024\r\n * FileBasename = PlayScript.ts\r\n * FileBasenameNoExtension = PlayScript\r\n * URL = db://assets/Scripts/PlayScript.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/en/\r\n * Math.floor(Math.random() * (max - min + 1)) + min;\r\n */\r\n \r\nenum BRICKS\r\n{\r\n    IN_TWO_COLLISION = 1,\r\n    IN_FOUR_COLLISION = 2,\r\n    HAS_REWARDS = 3\r\n}\r\n\r\n@ccclass('PlayScript')\r\nexport class PlayScript extends Component {\r\n\r\n    @property(Node)\r\n    sliderSprite : Node = null;\r\n\r\n    @property(Node)\r\n    ball : Node = null;\r\n\r\n    @property(SpriteFrame)\r\n    NormalBricks : SpriteFrame[] = [];\r\n\r\n    @property(SpriteFrame)\r\n    BrokenBricks : SpriteFrame[] = [];\r\n\r\n    @property(Prefab)\r\n    bricksPrefab : Prefab = null;\r\n\r\n    @property(JsonAsset)\r\n    asset : JsonAsset[] = [];\r\n\r\n    @property(SpriteFrame)\r\n    Rewards : SpriteFrame[] = [];\r\n\r\n\r\n    posOfSlider : Vec3 = null;\r\n    screenWidth : any;\r\n    tileDetails: string[] = [];\r\n    arrayOfBricksOnScreen : any[] = [];\r\n    ballInitialPosition : any;\r\n    rows : number = null;\r\n    columns : number = null;\r\n    level : number = 1;\r\n    ch : any;\r\n    startXPos : number = null;\r\n    startYPos : number = null;\r\n    bricksWidthTemp : number = null;\r\n    bricksHeightTemp : number = null;\r\n    scaleFactor : number = null;\r\n\r\n\r\n    start () {\r\n        this.posOfSlider = this.sliderSprite.getPosition();\r\n        this.screenWidth = this.node.width;\r\n        this.tileDetails = this.asset[this.level-1].json[\"tileDetails\"];\r\n        console.log(this.tileDetails);\r\n        console.log('row in the script  ' + this.asset[0].json[\"rows\"] + ' columns : ' + this.asset[0].json[\"columns\"]);\r\n        this.fetchScript(this.level);\r\n\r\n        let wallLeft = this.node.getChildByName('wallLeft');\r\n        let wallRight = this.node.getChildByName('wallRight');\r\n        let wallTop = this.node.getChildByName('wallTop');\r\n        wallLeft.setScale(1,this.node.getComponent(UITransform).height/1920);\r\n        wallRight.setScale(1,this.node.getComponent(UITransform).height/1920);\r\n        wallTop.setScale(this.screenWidth/1080,1);\r\n\r\n        let collider = this.ball.getComponent(Collider2D)\r\n        if(collider)\r\n        {\r\n            collider.on(Contact2DType.BEGIN_CONTACT,this.onBeginContact,this);\r\n        }\r\n        this.ballInitialPosition = this.ball.getPosition();\r\n       \r\n        console.log('start ended');\r\n        this.addBricks();\r\n    }\r\n    fetchScript(lev : number)\r\n    {\r\n        this.tileDetails = this.asset[lev-1].json[\"tileDetails\"];\r\n        this.rows = this.asset[lev-1].json[\"rows\"];\r\n        this.columns = this.asset[lev-1].json[\"columns\"];\r\n\r\n        this.startXPos = -((this.screenWidth)/2);\r\n        this.startYPos = (((this.node.getComponent(UITransform).height)/2));\r\n        this.bricksWidthTemp = this.screenWidth/this.columns;\r\n        this.bricksHeightTemp = (this.bricksPrefab.data.height * this.bricksWidthTemp)/this.bricksPrefab.data.width;\r\n        this.startXPos  += this.bricksWidthTemp/2;\r\n        this.startYPos -= this.bricksHeightTemp/2;\r\n        this.scaleFactor = this.bricksWidthTemp/this.bricksPrefab.data.width;\r\n        this.bricksPrefab.data.setScale(this.scaleFactor,this.scaleFactor);\r\n    }\r\n\r\n    onBeginContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) \r\n    {\r\n        if(otherCollider.name == 'brick<BoxCollider2D>')\r\n        {\r\n            this.updateBricks(otherCollider);\r\n        }\r\n        if(this.arrayOfBricksOnScreen.length == 0)\r\n        {\r\n            setTimeout(() => {\r\n                this.level++;\r\n                this.fetchScript(this.level);\r\n                this.addBricks();\r\n                this.ball.setPosition(this.ballInitialPosition);\r\n                this.ball.getComponent(RigidBody2D).linearVelocity = new Vec2(0,0);\r\n                if(this.level == 3)\r\n                {\r\n                    this.level = 1;\r\n                }\r\n            },200);\r\n        }\r\n    }\r\n\r\n    updateBricks(collider)\r\n    {\r\n        collider.node.brickTime--;\r\n        if(collider.node.brickTime == 1)\r\n        {\r\n            collider.getComponent(Sprite).spriteFrame = this.BrokenBricks[collider.node.colorNumber];\r\n        }\r\n        if(collider.node.brickTime == 0)\r\n        {\r\n            collider.getComponent(Sprite).destroy();\r\n            this.arrayOfBricksOnScreen.pop();\r\n            collider.destroy();\r\n        }\r\n    }\r\n\r\n    moveSliderOnTouch(touch,event)\r\n    {\r\n        let current = touch.getUILocation();\r\n        if(current.x+128>this.screenWidth)\r\n        {\r\n            current.x = this.screenWidth-128;\r\n        }\r\n        else if(current.x-128<0)\r\n        {\r\n            current.x = 128;\r\n        }\r\n        this.sliderSprite.setPosition(new Vec3(current.x-this.screenWidth/2,this.posOfSlider.y,1));\r\n    }\r\n    onLoad()\r\n    {\r\n        this.sliderSprite.on(Node.EventType.TOUCH_MOVE,this.moveSliderOnTouch,this);\r\n    }\r\n\r\n    addBricks()\r\n    {\r\n        for(let i=0;i<this.tileDetails.length;i++)\r\n        {\r\n            let type = this.tileDetails[i][\"type\"];\r\n            console.log(type);\r\n            let posX = this.startXPos + (Math.floor((this.tileDetails[i][\"index\"]%this.columns)) * this.bricksWidthTemp);\r\n            let posY = this.startYPos - (Math.floor((this.tileDetails[i][\"index\"]/this.columns)) * this.bricksHeightTemp);\r\n            console.log(posX,posY);\r\n            this.ch = instantiate(this.bricksPrefab);\r\n            this.node.addChild(this.ch);\r\n            this.ch.setPosition(new Vec3(posX,posY,1));\r\n            this.ch.getComponent(Sprite).spriteFrame = this.NormalBricks[this.tileDetails[i][\"color\"]-1];\r\n            this.ch.colorNumber = this.tileDetails[i][\"color\"]-1;\r\n            this.arrayOfBricksOnScreen.push(this.ch);\r\n            switch(type)\r\n            {\r\n                case BRICKS.IN_TWO_COLLISION :\r\n                    this.ch.brickTime = 2;\r\n                    this.ch.reward = false;\r\n                    break;\r\n                case BRICKS.IN_FOUR_COLLISION : \r\n                    this.ch.brickTime = 4;\r\n                    this.ch.reward = false;\r\n                    break;\r\n                case BRICKS.HAS_REWARDS :\r\n                    this.ch.brickTime = 2;\r\n                    this.ch.reward = true;\r\n                    break;\r\n                default :\r\n                    console.log('No details for this bricks.');\r\n            }\r\n        }\r\n    }\r\n}"]}