{"version":3,"sources":["file:///Users/naushad/BricksBreaker/assets/Scripts/PlayScript.ts"],"names":["_decorator","Component","Node","Sprite","Vec3","SpriteFrame","Prefab","instantiate","JsonAsset","Collider2D","Contact2DType","RigidBody2D","UITransform","Vec2","Intersection2D","Label","director","Button","AudioClip","SingletonClass","ccclass","property","LevelManager","getInstance","BRICKS","PlayScript","getLevel","onLoad","sliderSprite","on","EventType","TOUCH_MOVE","moveSliderOnTouch","start","posOfSlider","getPosition","screenWidth","node","width","tileDetails","asset","level","json","wallLeft","getChildByName","wallRight","wallTop","setScale","getComponent","height","fetchScript","addBricks","scoreLabel","ballInitialPosition","ball","gameOverPopUp","active","levelEndPopUp","gameOverHome","TOUCH_END","moveToHome","levelEndHome","gameOverRestart","restartTheSameLevel","levelEndRestart","levelEndNext","loadNextLevel","console","log","setScore","score","resetChances","i","arrayOfChances","length","p","pop","destroy","removeFromParent","string","event","loadScene","arrayOfBricksOnScreen","t","setTimeout","increaseLevel","onBeginContactTry","selfCollider","otherCollider","contact","showGameOverPopUp","gameOverScore","getScore","gameOverHighScore","getLevelHighScore","showlevelEndPopUp","LevelEndScore","LevelEndHighScore","lev","rows","columns","maxNumberOfBall","startXPos","startYPos","bricksWidthTemp","bricksHeightTemp","bricksPrefab","data","scaleFactor","balltemp","ballPrefab","addChild","ballNode","collider","addChances","BEGIN_CONTACT","onBeginContact","x","y","b","ballForChances","setPosition","push","onEndContact","name","updateBricks","addLevel","updateScore","newScore","scoreUpdateTime","timerId","setInterval","clearInterval","brickTime","spriteFrame","BrokenBricks","colorNumber","reward","randomRewards","Math","floor","random","currBricksPos","rew","rewardsPrefab","Rewards","arrayOfRewards","touch","current","getUILocation","update","forEach","element","rectRect","getBoundingBoxToWorld","removeReward","shift","linearVelocity","angularVelocity","tempball","getSiblingIndex","intervalID","timer","setLevelPlayed","type","posX","posY","ch","NormalBricks","IN_TWO_COLLISION","IN_FOUR_COLLISION","HAS_REWARDS","setSiblingIndex"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, SpriteComponent, Sprite, Vec3,AudioSourceComponent, UIComponent, UIModelComponent, SpriteFrame, Prefab, instantiate, JsonAsset, Collider2D, Contact2DType, IPhysics2DContact, PhysicsSystem2D, RigidBody, RigidBody2D, UITransform, rect, Vec2, Slider, Intersection2D, Label, director, Button, AudioSource, AudioClip } from 'cc';\r\nimport { SingletonClass } from './SingletonClass';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\nvar LevelManager:SingletonClass = SingletonClass.getInstance();\r\n\r\n/**\r\n * Predefined variables\r\n * Name = PlayScript\r\n * DateTime = Wed Sep 22 2021 13:48:26 GMT+0530 (India Standard Time)\r\n * Author = alokraj0024\r\n * FileBasename = PlayScript.ts\r\n * FileBasenameNoExtension = PlayScript\r\n * URL = db://assets/Scripts/PlayScript.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/en/\r\n * \r\n * Math.floor(Math.random() * (max - min + 1)) + min;\r\n * this.bg!.getComponent(UITransform)?.convertToNodeSpaceAR(pos);\r\n * let level=sys.localStorage.getItem('current_level');\r\n * sys.localStorage.setItem('current_level' , `${this.current_level}`);\r\n */\r\n\r\nenum BRICKS\r\n{\r\n    IN_TWO_COLLISION = 1,\r\n    IN_FOUR_COLLISION = 2,\r\n    HAS_REWARDS = 3\r\n}\r\n\r\n@ccclass('PlayScript')\r\nexport class PlayScript extends Component {\r\n\r\n\r\n\r\n    @property(Node)\r\n    sliderSprite : Node = null;\r\n\r\n    @property(Node)\r\n    ball : Node = null;\r\n\r\n    @property(SpriteFrame)\r\n    NormalBricks : SpriteFrame[] = [];\r\n\r\n    @property(SpriteFrame)\r\n    BrokenBricks : SpriteFrame[] = [];\r\n\r\n    @property(JsonAsset)\r\n    asset : JsonAsset[] = [];\r\n\r\n    @property(SpriteFrame)\r\n    Rewards : SpriteFrame[] = [];\r\n\r\n    @property(Prefab)\r\n    bricksPrefab : Prefab = null;\r\n\r\n    @property(Prefab)\r\n    rewardsPrefab : Prefab = null;\r\n\r\n    @property(Prefab)\r\n    ballPrefab : Prefab = null;\r\n\r\n    @property(Prefab)\r\n    ballForChances : Prefab = null;\r\n\r\n    @property(Node)\r\n    gameOverPopUp : Node = null;\r\n\r\n    @property(Node)\r\n    levelEndPopUp : Node = null;\r\n\r\n    @property(Button)\r\n    gameOverHome : Button = null;\r\n\r\n    @property(Button)\r\n    gameOverRestart : Button = null;\r\n\r\n    @property(Button)\r\n    levelEndHome : Button = null;\r\n\r\n    @property(Button)\r\n    levelEndRestart : Button = null;\r\n\r\n    @property(Button)\r\n    levelEndNext : Button = null;\r\n\r\n    @property(Label)\r\n    gameOverScore : Label = null;\r\n\r\n    @property(Label)\r\n    gameOverHighScore : Label = null;\r\n\r\n    @property(Label)\r\n    LevelEndScore : Label = null;\r\n\r\n    @property(Label)\r\n    LevelEndHighScore : Label = null;\r\n\r\n    @property(SpriteFrame)\r\n    yellowStar : SpriteFrame = null;\r\n\r\n    @property(AudioClip)\r\n    audioGame : AudioClip = null;\r\n\r\n    posOfSlider : Vec3 = null;\r\n    screenWidth : any;\r\n    tileDetails: string[] = [];\r\n    arrayOfBricksOnScreen : any[] = [];\r\n    ballInitialPosition : any;\r\n    rows : number = null;\r\n    columns : number = null;\r\n    level : number = LevelManager.getLevel();\r\n    ch : any;\r\n    startXPos : number = null;\r\n    startYPos : number = null;\r\n    bricksWidthTemp : number = null;\r\n    bricksHeightTemp : number = null;\r\n    scaleFactor : number = null;\r\n    arrayOfRewards : any[] = [];\r\n    maxNumberOfBall : number = null;\r\n    ballNode : Node = null;\r\n    collider : any = null;\r\n    addLevel : Boolean = false;\r\n    scoreLabel : any = null;\r\n    score : number = 0;\r\n    arrayOfChances : any[] = [];\r\n    timer : number = 0;\r\n    intervalID : any = null;\r\n\r\n    onLoad()\r\n    {\r\n        this.sliderSprite.on(Node.EventType.TOUCH_MOVE,this.moveSliderOnTouch,this);\r\n    }\r\n\r\n    start () {\r\n        this.posOfSlider = this.sliderSprite.getPosition();\r\n        this.screenWidth = this.node.width;\r\n        this.tileDetails = this.asset[this.level-1].json[\"tileDetails\"];\r\n        \r\n        let wallLeft = this.node.getChildByName('wallLeft');\r\n        let wallRight = this.node.getChildByName('wallRight');\r\n        let wallTop = this.node.getChildByName('wallTop');\r\n        wallLeft.setScale(1,this.node.getComponent(UITransform).height/1920);\r\n        wallRight.setScale(1,this.node.getComponent(UITransform).height/1920);\r\n        wallTop.setScale(this.screenWidth/1080,1);\r\n\r\n        this.fetchScript(this.level);\r\n        this.addBricks();\r\n\r\n        this.scoreLabel = this.node.getChildByName('score');\r\n        this.ballInitialPosition = this.ball.getPosition();\r\n\r\n        this.gameOverPopUp.active = false;\r\n        this.levelEndPopUp.active = false;\r\n        \r\n        this.gameOverHome.node.on(Node.EventType.TOUCH_END,this.moveToHome,this);\r\n        this.levelEndHome.node.on(Node.EventType.TOUCH_END,this.moveToHome,this);\r\n        this.gameOverRestart.node.on(Node.EventType.TOUCH_END,this.restartTheSameLevel,this);\r\n        this.levelEndRestart.node.on(Node.EventType.TOUCH_END,this.restartTheSameLevel,this);\r\n        this.levelEndNext.node.on(Node.EventType.TOUCH_END,this.loadNextLevel,this);\r\n        console.log('start called in playScript');\r\n        LevelManager.setScore(0);\r\n        this.score = 0;\r\n    }\r\n\r\n    resetChances()\r\n    {\r\n        for(let i =0;i<this.arrayOfChances.length;i++)\r\n        {\r\n            let p = this.arrayOfChances.pop();\r\n            p.getComponent(Sprite).destroy();\r\n            p.removeFromParent();\r\n        }\r\n        this.arrayOfChances = [];\r\n        this.score = 0;\r\n        LevelManager.setScore(this.score);\r\n        this.scoreLabel.getComponent(Label).string = `score : ${this.score}`;\r\n    }\r\n\r\n    moveToHome(event)\r\n    {\r\n        director.loadScene('levelScreenNew');\r\n    }\r\n\r\n    restartTheSameLevel(event)\r\n    {\r\n        this.resetChances();\r\n        console.log('before ' + this.arrayOfBricksOnScreen.length);\r\n        for(let i = 0;i<this.arrayOfBricksOnScreen.length;i++)\r\n        {\r\n            let t = this.arrayOfBricksOnScreen[i];\r\n            //let p = t.node.getParent();\r\n        }\r\n\r\n        this.arrayOfBricksOnScreen = [];\r\n        this.fetchScript(LevelManager.getLevel());\r\n        this.addBricks();\r\n        setTimeout(() => {\r\n            this.gameOverPopUp.active = false;\r\n            this.levelEndPopUp.active = false;\r\n        },100);\r\n    }\r\n\r\n    loadNextLevel()\r\n    {\r\n        LevelManager.increaseLevel();\r\n        this.resetChances();\r\n        this.fetchScript(LevelManager.getLevel());\r\n        this.addBricks();\r\n        setTimeout(() => {\r\n            this.gameOverPopUp.active = false;\r\n            this.levelEndPopUp.active = false;\r\n        },100);\r\n    }\r\n\r\n    onBeginContactTry(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null)\r\n    {\r\n        console.log(otherCollider);\r\n    }\r\n\r\n    showGameOverPopUp()\r\n    {\r\n        this.gameOverScore.getComponent(Label).string = `${LevelManager.getScore()}`;\r\n        this.gameOverHighScore.getComponent(Label).string = `${LevelManager.getLevelHighScore()}`;\r\n        this.gameOverPopUp.active = true;\r\n    }\r\n\r\n    showlevelEndPopUp()\r\n    {\r\n        \r\n        setTimeout(() => {\r\n            LevelManager.setScore(this.score);\r\n            this.LevelEndScore.getComponent(Label).string = `${LevelManager.getScore()}`;\r\n            this.LevelEndHighScore.getComponent(Label).string = `${LevelManager.getLevelHighScore()}`;\r\n            this.levelEndPopUp.active = true;\r\n        },510);\r\n    }\r\n\r\n    fetchScript(lev : number)\r\n    {\r\n        this.tileDetails = this.asset[lev-1].json[\"tileDetails\"];\r\n        this.rows = this.asset[lev-1].json[\"rows\"];\r\n        this.columns = this.asset[lev-1].json[\"columns\"];\r\n        this.maxNumberOfBall = this.asset[lev-1].json[\"maxBall\"];\r\n\r\n        this.startXPos = -((this.screenWidth)/2);\r\n        this.startYPos = (((this.node.getComponent(UITransform).height)/2));\r\n        this.bricksWidthTemp = this.screenWidth/this.columns;\r\n        this.bricksHeightTemp = (this.bricksPrefab.data.height * this.bricksWidthTemp)/this.bricksPrefab.data.width;\r\n        this.startXPos  += this.bricksWidthTemp/2;\r\n        this.startYPos -= this.bricksHeightTemp/2;\r\n        this.scaleFactor = this.bricksWidthTemp/this.bricksPrefab.data.width;\r\n        this.bricksPrefab.data.setScale(this.scaleFactor,this.scaleFactor);\r\n        console.log(this.ballInitialPosition);\r\n        let balltemp = instantiate(this.ballPrefab);\r\n        this.node.addChild(balltemp);\r\n        this.ballNode = balltemp;\r\n        console.log(this.ballNode);\r\n        this.collider = this.ballNode.getComponent(Collider2D);\r\n        this.addChances();\r\n        if(this.collider)\r\n        {\r\n            this.collider.on(Contact2DType.BEGIN_CONTACT,this.onBeginContact,this);\r\n            //this.collider.on(Contact2DType.END_CONTACT,this.onEndContact,this);\r\n        }\r\n        //this.scoreLabel.getComponent(Label).string = `score : ${LevelManager.getScore()}`;\r\n    }\r\n\r\n    addChances()\r\n    {\r\n        let x = -((this.screenWidth)/2);\r\n        let y = -(((this.node.getComponent(UITransform).height)/2));\r\n        x+=38;\r\n        y+=38;\r\n        for(let i =1;i<this.maxNumberOfBall;i++)\r\n        {\r\n            console.log('loop called');\r\n            let b = instantiate(this.ballForChances);\r\n            this.node.addChild(b);\r\n            b.setPosition(new Vec3(x,y,1));\r\n            this.arrayOfChances.push(b);\r\n            x+=76;\r\n        }\r\n        console.log('addchances called');\r\n    }\r\n    \r\n    onEndContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null)\r\n    {\r\n        if(this.arrayOfBricksOnScreen.length == 0)\r\n        {\r\n            //this.ballNode.getComponent(Sprite).destroy();\r\n            this.ballNode.removeFromParent();\r\n        }\r\n    }\r\n\r\n    onBeginContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) \r\n    {\r\n        //console.log(this.ball.getPosition());\r\n        if(otherCollider.name == 'brick<BoxCollider2D>')\r\n        {\r\n            // otherCollider.node.parent.removeChild(otherCollider.node);\r\n            console.log('from function');\r\n            this.updateBricks(otherCollider);\r\n            // this.arrayOfBricksOnScreen.pop();\r\n        }\r\n\r\n        if(this.arrayOfBricksOnScreen.length == 0)\r\n        {\r\n            this.addLevel = true;\r\n        }\r\n    }\r\n\r\n\r\n    updateScore(newScore : number):void\r\n    {\r\n        let scoreUpdateTime = 500/newScore;\r\n        let timerId = setInterval(() => {\r\n            this.score++;\r\n            this.scoreLabel.getComponent(Label).string = `score : ${this.score}`;\r\n        },scoreUpdateTime);\r\n\r\n        setTimeout(() => {\r\n            clearInterval(timerId);\r\n        },500);\r\n    }\r\n\r\n    updateBricks(collider)\r\n    {\r\n        //console.log(collider);\r\n        collider.node.brickTime--;\r\n        if(collider.node.brickTime == 1)\r\n        {\r\n            collider.getComponent(Sprite).spriteFrame = this.BrokenBricks[collider.node.colorNumber];\r\n        }\r\n        if(collider.node.brickTime == 0)\r\n        {\r\n            collider.getComponent(Sprite).destroy();\r\n\r\n            if(collider.node.reward == true)\r\n            {\r\n                let randomRewards = Math.floor(Math.random() * (4 - 0 + 1)) + 0;\r\n                let currBricksPos = collider.node.getPosition();\r\n                console.log(currBricksPos);\r\n                let rew = instantiate(this.rewardsPrefab);\r\n                this.node.addChild(rew);\r\n                rew.setPosition(new Vec3(currBricksPos));\r\n                rew.getComponent(Sprite).spriteFrame = this.Rewards[randomRewards];\r\n                this.arrayOfRewards.push(rew);\r\n            }\r\n            this.arrayOfBricksOnScreen.pop();\r\n            collider.destroy();\r\n            //collider.node.destroy();\r\n            //this.score += 2;\r\n            //this.scoreLabel.getComponent(Label).string = `score : ${this.score}`;\r\n            this.updateScore(2);\r\n        }\r\n    }\r\n\r\n    moveSliderOnTouch(touch,event)\r\n    {\r\n        let current = touch.getUILocation();\r\n        if(current.x+128>this.screenWidth)\r\n        {\r\n            current.x = this.screenWidth-128;\r\n        }\r\n        else if(current.x-128<0)\r\n        {\r\n            current.x = 128;\r\n        }\r\n        this.sliderSprite.setPosition(new Vec3(current.x-this.screenWidth/2,this.posOfSlider.y,1));\r\n    }\r\n\r\n    update()\r\n    {\r\n        this.arrayOfRewards.forEach(element => {\r\n            element.setPosition(element.getPosition().x,element.getPosition().y-10,1);\r\n\r\n            if(Intersection2D.rectRect(\r\n                element.getComponent(UITransform)?.getBoundingBoxToWorld(),\r\n                this.sliderSprite.getComponent(UITransform)?.getBoundingBoxToWorld()!\r\n                ))\r\n                {\r\n                    console.log('collided rewards and slider');\r\n                    let removeReward = this.arrayOfRewards.shift();\r\n                    removeReward.getComponent(Sprite).destroy();\r\n                    removeReward.destroy();\r\n                    console.log(this.arrayOfRewards);\r\n                    //this.score += 10;\r\n                    //this.scoreLabel.getComponent(Label).string = `score : ${this.score}`;\r\n                    this.updateScore(10);\r\n                }\r\n        });\r\n\r\n        if(this.ballNode.getPosition().y < (-(this.node.getComponent(UITransform).height)))\r\n        {\r\n            console.log('ball is out of the screen');\r\n            this.maxNumberOfBall--;\r\n            console.log('chances left : ' + this.maxNumberOfBall);\r\n            if(this.maxNumberOfBall>=1)\r\n            {\r\n                this.ballNode.setPosition(this.ballInitialPosition);\r\n                this.ballNode.getComponent(RigidBody2D).linearVelocity = new Vec2(0,0);\r\n                this.ballNode.getComponent(RigidBody2D).angularVelocity = 0;\r\n                let tempball = this.arrayOfChances.pop();\r\n                tempball.removeFromParent();\r\n                console.log('one ball removed');\r\n                //this.score--;\r\n                //LevelManager.setScore(this.score);\r\n            }\r\n\r\n            else\r\n            {\r\n                this.ballNode.removeFromParent();\r\n\r\n                LevelManager.setScore(this.score);\r\n                \r\n                this.showGameOverPopUp();\r\n                console.log(this.gameOverPopUp.getSiblingIndex());\r\n                for(let i =0;i<this.arrayOfChances.length;i++)\r\n                {\r\n                    let p = this.arrayOfChances.pop();\r\n                    p.removeFromParent();\r\n                }\r\n                this.arrayOfChances = [];\r\n                console.log('game is over now ');\r\n                clearInterval(this.intervalID);\r\n                \r\n                this.timer = 0;\r\n                \r\n            }\r\n        }\r\n\r\n        if(this.arrayOfBricksOnScreen.length == 0 && this.addLevel == true)\r\n        {\r\n            this.addLevel = false;\r\n            this.ballNode.removeFromParent();\r\n\r\n            this.level++;\r\n            if(this.level == 7)\r\n            {\r\n                this.level = 1;\r\n            }\r\n\r\n            LevelManager.setLevelPlayed(this.level);\r\n            LevelManager.setScore(this.score);\r\n            clearInterval(this.intervalID);\r\n            this.timer = 0;\r\n            this.showlevelEndPopUp();\r\n        }\r\n    }\r\n\r\n    addBricks()\r\n    {\r\n        for(let i=0;i<this.tileDetails.length;i++)\r\n        {\r\n            let type = this.tileDetails[i][\"type\"];\r\n            console.log(type);\r\n            let posX = this.startXPos + (Math.floor((this.tileDetails[i][\"index\"]%this.columns)) * this.bricksWidthTemp);\r\n            let posY = this.startYPos - (Math.floor((this.tileDetails[i][\"index\"]/this.columns)) * this.bricksHeightTemp);\r\n            console.log(posX,posY);\r\n            this.ch = instantiate(this.bricksPrefab);\r\n            this.node.addChild(this.ch);\r\n            this.ch.setPosition(new Vec3(posX,posY,1));\r\n            this.ch.getComponent(Sprite).spriteFrame = this.NormalBricks[this.tileDetails[i][\"color\"]-1];\r\n            this.ch.colorNumber = this.tileDetails[i][\"color\"]-1;\r\n            this.arrayOfBricksOnScreen.push(this.ch);\r\n            \r\n            switch(type)\r\n            {\r\n                case BRICKS.IN_TWO_COLLISION :\r\n                    this.ch.brickTime = 2;\r\n                    this.ch.reward = false;\r\n                    break;\r\n                case BRICKS.IN_FOUR_COLLISION :\r\n                    this.ch.brickTime = 4;\r\n                    this.ch.reward = false;\r\n                    break;\r\n                case BRICKS.HAS_REWARDS :\r\n                    this.ch.brickTime = 2;\r\n                    this.ch.reward = true;\r\n                    break;\r\n                default :\r\n                    console.log('No details for this bricks.');\r\n            }\r\n        }\r\n        console.log('last prefab : ' + this.ch.getSiblingIndex());\r\n        this.gameOverPopUp.setSiblingIndex(this.ch.getSiblingIndex()+5);\r\n        this.intervalID = setInterval( () =>{\r\n            this.timer++;\r\n            console.log(this.timer);\r\n        },1000);\r\n\r\n    }\r\n}"]}