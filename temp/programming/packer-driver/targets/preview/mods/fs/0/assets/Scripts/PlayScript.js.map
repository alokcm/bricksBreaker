{"version":3,"sources":["file:///Users/naushad/BricksBreaker/assets/Scripts/PlayScript.ts"],"names":["_decorator","Component","Node","Sprite","Vec3","SpriteFrame","Prefab","instantiate","JsonAsset","Collider2D","Contact2DType","RigidBody2D","UITransform","Vec2","Intersection2D","Label","director","SingletonClass","ccclass","property","LevelManager","getInstance","BRICKS","PlayScript","getLevel","onLoad","sliderSprite","on","EventType","TOUCH_MOVE","moveSliderOnTouch","start","posOfSlider","getPosition","screenWidth","node","width","tileDetails","asset","level","json","wallLeft","getChildByName","wallRight","wallTop","setScale","getComponent","height","fetchScript","addBricks","scoreLabel","ballInitialPosition","ball","onBeginContactTry","selfCollider","otherCollider","contact","console","log","lev","rows","columns","maxNumberOfBall","startXPos","startYPos","bricksWidthTemp","bricksHeightTemp","bricksPrefab","data","scaleFactor","balltemp","ballPrefab","addChild","ballNode","collider","addChances","BEGIN_CONTACT","onBeginContact","x","y","i","b","ballForChances","setPosition","arrayOfChances","push","onEndContact","arrayOfBricksOnScreen","length","removeFromParent","name","updateBricks","addLevel","brickTime","spriteFrame","BrokenBricks","colorNumber","destroy","reward","randomRewards","Math","floor","random","currBricksPos","rew","rewardsPrefab","Rewards","arrayOfRewards","pop","score","string","touch","event","current","getUILocation","update","forEach","element","rectRect","getBoundingBoxToWorld","removeReward","shift","linearVelocity","tempball","setLevel","setLevelPlayed","temp","loadScene","type","posX","posY","ch","NormalBricks","IN_TWO_COLLISION","IN_FOUR_COLLISION","HAS_REWARDS"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, SpriteComponent, Sprite, Vec3, UIComponent, UIModelComponent, SpriteFrame, Prefab, instantiate, JsonAsset, Collider2D, Contact2DType, IPhysics2DContact, PhysicsSystem2D, RigidBody, RigidBody2D, UITransform, rect, Vec2, Slider, Intersection2D, Label, director } from 'cc';\r\nimport { SingletonClass } from './SingletonClass';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\nvar LevelManager:SingletonClass = SingletonClass.getInstance();\r\n\r\n/**\r\n * Predefined variables\r\n * Name = PlayScript\r\n * DateTime = Wed Sep 22 2021 13:48:26 GMT+0530 (India Standard Time)\r\n * Author = alokraj0024\r\n * FileBasename = PlayScript.ts\r\n * FileBasenameNoExtension = PlayScript\r\n * URL = db://assets/Scripts/PlayScript.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/en/\r\n * \r\n * Math.floor(Math.random() * (max - min + 1)) + min;\r\n * this.bg!.getComponent(UITransform)?.convertToNodeSpaceAR(pos);\r\n * let level=sys.localStorage.getItem('current_level');\r\n * sys.localStorage.setItem('current_level' , `${this.current_level}`);\r\n */\r\n\r\nenum BRICKS\r\n{\r\n    IN_TWO_COLLISION = 1,\r\n    IN_FOUR_COLLISION = 2,\r\n    HAS_REWARDS = 3\r\n}\r\n\r\n@ccclass('PlayScript')\r\nexport class PlayScript extends Component {\r\n\r\n\r\n\r\n    @property(Node)\r\n    sliderSprite : Node = null;\r\n\r\n    @property(Node)\r\n    ball : Node = null;\r\n\r\n    @property(SpriteFrame)\r\n    NormalBricks : SpriteFrame[] = [];\r\n\r\n    @property(SpriteFrame)\r\n    BrokenBricks : SpriteFrame[] = [];\r\n\r\n    @property(JsonAsset)\r\n    asset : JsonAsset[] = [];\r\n\r\n    @property(SpriteFrame)\r\n    Rewards : SpriteFrame[] = [];\r\n\r\n    @property(Prefab)\r\n    bricksPrefab : Prefab = null;\r\n\r\n    @property(Prefab)\r\n    rewardsPrefab : Prefab = null;\r\n\r\n    @property(Prefab)\r\n    ballPrefab : Prefab = null;\r\n\r\n    @property(Prefab)\r\n    ballForChances : Prefab = null;\r\n\r\n    posOfSlider : Vec3 = null;\r\n    screenWidth : any;\r\n    tileDetails: string[] = [];\r\n    arrayOfBricksOnScreen : any[] = [];\r\n    ballInitialPosition : any;\r\n    rows : number = null;\r\n    columns : number = null;\r\n    level : number = LevelManager.getLevel();\r\n    ch : any;\r\n    startXPos : number = null;\r\n    startYPos : number = null;\r\n    bricksWidthTemp : number = null;\r\n    bricksHeightTemp : number = null;\r\n    scaleFactor : number = null;\r\n    arrayOfRewards : any[] = [];\r\n    maxNumberOfBall : number = null;\r\n    ballNode : Node = null;\r\n    collider : any = null;\r\n    addLevel : Boolean = false;\r\n    scoreLabel : any = null;\r\n    score : number = 0;\r\n    arrayOfChances : any[] = [];\r\n\r\n\r\n\r\n    onLoad()\r\n    {\r\n        this.sliderSprite.on(Node.EventType.TOUCH_MOVE,this.moveSliderOnTouch,this);\r\n    }\r\n\r\n    start () {\r\n        this.posOfSlider = this.sliderSprite.getPosition();\r\n        this.screenWidth = this.node.width;\r\n        this.tileDetails = this.asset[this.level-1].json[\"tileDetails\"];\r\n        \r\n        let wallLeft = this.node.getChildByName('wallLeft');\r\n        let wallRight = this.node.getChildByName('wallRight');\r\n        let wallTop = this.node.getChildByName('wallTop');\r\n        wallLeft.setScale(1,this.node.getComponent(UITransform).height/1920);\r\n        wallRight.setScale(1,this.node.getComponent(UITransform).height/1920);\r\n        wallTop.setScale(this.screenWidth/1080,1);\r\n\r\n        this.fetchScript(this.level);\r\n        this.addBricks();\r\n\r\n        this.scoreLabel = this.node.getChildByName('score');\r\n        this.ballInitialPosition = this.ball.getPosition();\r\n    }\r\n\r\n    onBeginContactTry(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null)\r\n    {\r\n        console.log(otherCollider);\r\n    }\r\n\r\n    fetchScript(lev : number)\r\n    {\r\n        this.tileDetails = this.asset[lev-1].json[\"tileDetails\"];\r\n        this.rows = this.asset[lev-1].json[\"rows\"];\r\n        this.columns = this.asset[lev-1].json[\"columns\"];\r\n        this.maxNumberOfBall = this.asset[lev-1].json[\"maxBall\"];\r\n\r\n        this.startXPos = -((this.screenWidth)/2);\r\n        this.startYPos = (((this.node.getComponent(UITransform).height)/2));\r\n        this.bricksWidthTemp = this.screenWidth/this.columns;\r\n        this.bricksHeightTemp = (this.bricksPrefab.data.height * this.bricksWidthTemp)/this.bricksPrefab.data.width;\r\n        this.startXPos  += this.bricksWidthTemp/2;\r\n        this.startYPos -= this.bricksHeightTemp/2;\r\n        this.scaleFactor = this.bricksWidthTemp/this.bricksPrefab.data.width;\r\n        this.bricksPrefab.data.setScale(this.scaleFactor,this.scaleFactor);\r\n        console.log(this.ballInitialPosition);\r\n        let balltemp = instantiate(this.ballPrefab);\r\n        this.node.addChild(balltemp);\r\n        this.ballNode = balltemp;\r\n        console.log(this.ballNode);\r\n        this.collider = this.ballNode.getComponent(Collider2D);\r\n        this.addChances();\r\n        if(this.collider)\r\n        {\r\n            this.collider.on(Contact2DType.BEGIN_CONTACT,this.onBeginContact,this);\r\n            //this.collider.on(Contact2DType.END_CONTACT,this.onEndContact,this);\r\n        }\r\n    }\r\n\r\n    addChances()\r\n    {\r\n        console.log('addchances called');\r\n        let x = -((this.screenWidth)/2);\r\n        let y = -(((this.node.getComponent(UITransform).height)/2));\r\n        x+=38;\r\n        y+=38;\r\n        for(let i =1;i<this.maxNumberOfBall;i++)\r\n        {\r\n            console.log('loop called');\r\n            let b = instantiate(this.ballForChances);\r\n            this.node.addChild(b);\r\n            b.setPosition(new Vec3(x,y,1));\r\n            this.arrayOfChances.push(b);\r\n            x+=76;\r\n        }\r\n    }\r\n    \r\n    onEndContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null)\r\n    {\r\n        if(this.arrayOfBricksOnScreen.length == 0)\r\n        {\r\n            //this.ballNode.getComponent(Sprite).destroy();\r\n            this.ballNode.removeFromParent();\r\n        }\r\n    }\r\n    onBeginContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) \r\n    {\r\n        console.log(this.ball.getPosition());\r\n        if(otherCollider.name == 'brick<BoxCollider2D>')\r\n        {\r\n            this.updateBricks(otherCollider);\r\n        }\r\n\r\n        if(this.arrayOfBricksOnScreen.length == 0)\r\n        {\r\n            this.addLevel = true;\r\n        }\r\n    }\r\n\r\n    updateBricks(collider)\r\n    {\r\n        collider.node.brickTime--;\r\n        if(collider.node.brickTime == 1)\r\n        {\r\n            collider.getComponent(Sprite).spriteFrame = this.BrokenBricks[collider.node.colorNumber];\r\n        }\r\n        if(collider.node.brickTime == 0)\r\n        {\r\n            collider.getComponent(Sprite).destroy();\r\n\r\n            if(collider.node.reward == true)\r\n            {\r\n                let randomRewards = Math.floor(Math.random() * (4 - 0 + 1)) + 0;\r\n                let currBricksPos = collider.node.getPosition();\r\n                console.log(currBricksPos);\r\n                let rew = instantiate(this.rewardsPrefab);\r\n                this.node.addChild(rew);\r\n                rew.setPosition(new Vec3(currBricksPos));\r\n                rew.getComponent(Sprite).spriteFrame = this.Rewards[randomRewards];\r\n                this.arrayOfRewards.push(rew);\r\n            }\r\n            this.arrayOfBricksOnScreen.pop();\r\n            collider.destroy();\r\n            this.score += 2;\r\n            this.scoreLabel.getComponent(Label).string = `score : ${this.score}`;\r\n        }\r\n    }\r\n\r\n    moveSliderOnTouch(touch,event)\r\n    {\r\n        let current = touch.getUILocation();\r\n        if(current.x+128>this.screenWidth)\r\n        {\r\n            current.x = this.screenWidth-128;\r\n        }\r\n        else if(current.x-128<0)\r\n        {\r\n            current.x = 128;\r\n        }\r\n        this.sliderSprite.setPosition(new Vec3(current.x-this.screenWidth/2,this.posOfSlider.y,1));\r\n    }\r\n\r\n    \r\n\r\n    update()\r\n    {\r\n        this.arrayOfRewards.forEach(element => {\r\n            element.setPosition(element.getPosition().x,element.getPosition().y-10,1);\r\n\r\n            if(Intersection2D.rectRect(\r\n                element.getComponent(UITransform)?.getBoundingBoxToWorld(),\r\n                this.sliderSprite.getComponent(UITransform)?.getBoundingBoxToWorld()!\r\n                ))\r\n                {\r\n                    console.log('collided rewards and slider');\r\n                    let removeReward = this.arrayOfRewards.shift();\r\n                    removeReward.getComponent(Sprite).destroy();\r\n                    removeReward.destroy();\r\n                    console.log(this.arrayOfRewards);\r\n                    this.score += 10;\r\n                    this.scoreLabel.getComponent(Label).string = `score : ${this.score}`;\r\n                }\r\n        });\r\n\r\n        if(this.ballNode.getPosition().y < (-(this.node.getComponent(UITransform).height)))\r\n        {\r\n            console.log('ball is out of the screen');\r\n            this.maxNumberOfBall--;\r\n            if(this.maxNumberOfBall>=1)\r\n            {\r\n\r\n                this.ballNode.setPosition(this.ballInitialPosition);\r\n                this.ballNode.getComponent(RigidBody2D).linearVelocity = new Vec2(0,0);\r\n                // let newBall = instantiate(this.ballPrefab);\r\n                // this.node.addChild(newBall);\r\n                // this.ball = newBall;\r\n                let tempball = this.arrayOfChances.pop();\r\n                tempball.removeFromParent();\r\n            }\r\n            else\r\n            {\r\n                this.ballNode.removeFromParent();\r\n            }\r\n        }\r\n\r\n        if(this.arrayOfBricksOnScreen.length == 0 && this.addLevel == true)\r\n        {\r\n            this.addLevel = false;\r\n            this.ballNode.removeFromParent();\r\n\r\n            this.level++;\r\n            if(this.level == 3)\r\n            {\r\n                this.level = 1;\r\n            }\r\n            LevelManager.setLevel(this.level);\r\n            LevelManager.setLevelPlayed(this.level);\r\n            /*this.fetchScript(this.level);\r\n            this.addBricks();*/\r\n            for(let i = 1;i<this.arrayOfChances.length;i++)\r\n            {\r\n                let temp = this.arrayOfChances[i];\r\n                temp.removeFromParent();\r\n            }\r\n            this.arrayOfChances = [];\r\n            director.loadScene('levelScreenNew');\r\n        }\r\n    }\r\n\r\n    addBricks()\r\n    {\r\n        for(let i=0;i<this.tileDetails.length;i++)\r\n        {\r\n            let type = this.tileDetails[i][\"type\"];\r\n            console.log(type);\r\n            let posX = this.startXPos + (Math.floor((this.tileDetails[i][\"index\"]%this.columns)) * this.bricksWidthTemp);\r\n            let posY = this.startYPos - (Math.floor((this.tileDetails[i][\"index\"]/this.columns)) * this.bricksHeightTemp);\r\n            console.log(posX,posY);\r\n            this.ch = instantiate(this.bricksPrefab);\r\n            this.node.addChild(this.ch);\r\n            this.ch.setPosition(new Vec3(posX,posY,1));\r\n            this.ch.getComponent(Sprite).spriteFrame = this.NormalBricks[this.tileDetails[i][\"color\"]-1];\r\n            this.ch.colorNumber = this.tileDetails[i][\"color\"]-1;\r\n            this.arrayOfBricksOnScreen.push(this.ch);\r\n            switch(type)\r\n            {\r\n                case BRICKS.IN_TWO_COLLISION :\r\n                    this.ch.brickTime = 2;\r\n                    this.ch.reward = false;\r\n                    break;\r\n                case BRICKS.IN_FOUR_COLLISION :\r\n                    this.ch.brickTime = 4;\r\n                    this.ch.reward = false;\r\n                    break;\r\n                case BRICKS.HAS_REWARDS :\r\n                    this.ch.brickTime = 2;\r\n                    this.ch.reward = true;\r\n                    break;\r\n                default :\r\n                    console.log('No details for this bricks.');\r\n            }\r\n        }\r\n    }\r\n}"]}