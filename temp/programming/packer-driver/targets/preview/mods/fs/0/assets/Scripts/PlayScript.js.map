{"version":3,"sources":["file:///Users/naushad/BricksBreaker/assets/Scripts/PlayScript.ts"],"names":["_decorator","Component","Node","Sprite","Vec3","SpriteFrame","Prefab","instantiate","JsonAsset","ccclass","property","PlayScript","start","posOfSlider","sliderSprite","getPosition","screenWidth","node","width","addBricks","titleList","asset","json","console","log","moveSliderOnTouch","touch","event","current","getUILocation","x","setPosition","y","onLoad","on","EventType","TOUCH_MOVE","onClick","str","titleIndex","k","loc","i","row","j","column","noBrciks","Math","floor","random","ch","bricksPrefab","getComponent","spriteFrame","NormalBricks","addChild"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, SpriteComponent, Sprite, Vec3, UIComponent, UIModelComponent, SpriteFrame, Prefab, instantiate, JsonAsset } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * Predefined variables\r\n * Name = PlayScript\r\n * DateTime = Wed Sep 22 2021 13:48:26 GMT+0530 (India Standard Time)\r\n * Author = alokraj0024\r\n * FileBasename = PlayScript.ts\r\n * FileBasenameNoExtension = PlayScript\r\n * URL = db://assets/Scripts/PlayScript.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/en/\r\n * Math.floor(Math.random() * (max - min + 1)) + min;\r\n */\r\n \r\n@ccclass('PlayScript')\r\nexport class PlayScript extends Component {\r\n\r\n    @property(Node)\r\n    sliderSprite : Node = null;\r\n\r\n    @property(SpriteFrame)\r\n    NormalBricks : SpriteFrame[] = [];\r\n\r\n    @property(SpriteFrame)\r\n    BrokenBricks : SpriteFrame[] = [];\r\n\r\n    @property(Prefab)\r\n    bricksPrefab : Prefab = null;\r\n\r\n    @property(JsonAsset)\r\n    asset : JsonAsset = null;\r\n\r\n\r\n    posOfSlider : Vec3 = null;\r\n    screenWidth : any;\r\n    titleList: string[] = [];\r\n    titleIndex: number = 1;\r\n\r\n    start () {\r\n        this.posOfSlider = this.sliderSprite.getPosition();\r\n        this.screenWidth = this.node.width;\r\n        this.addBricks();\r\n        this.titleList = this.asset.json[\"Symptoms data\"][0];\r\n        console.log(this.titleList);\r\n    }\r\n\r\n    moveSliderOnTouch(touch,event)\r\n    {\r\n        let current = touch.getUILocation();\r\n        if(current.x+128>this.screenWidth)\r\n        {\r\n            current.x = this.screenWidth-128;\r\n        }\r\n        else if(current.x-128<0)\r\n        {\r\n            current.x = 128;\r\n        }\r\n        this.sliderSprite.setPosition(new Vec3(current.x-this.screenWidth/2,this.posOfSlider.y,1));\r\n    }\r\n    onLoad()\r\n    {\r\n        this.sliderSprite.on(Node.EventType.TOUCH_MOVE,this.moveSliderOnTouch,this);\r\n    }\r\n\r\n    onClick()\r\n    {\r\n        let str = this.titleList[this.titleIndex];\r\n        console.log(str);\r\n        this.titleIndex++;\r\n        if(this.titleIndex>13)\r\n            this.titleIndex = 1;\r\n    }\r\n\r\n    row : number = 6;\r\n    column : number = 3;\r\n    noBrciks : number[] = [7,8,9,13,14,15];\r\n\r\n    addBricks()\r\n    {\r\n        let k =1,loc=0;\r\n        for(let i=1;i<=this.row;i++)\r\n        {\r\n            for(let j =1;j<=this.column;j++)\r\n            {\r\n                if(k++ == this.noBrciks[loc])\r\n                {\r\n                    loc++;\r\n                }\r\n                else\r\n                {\r\n\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n            let x = Math.floor(Math.random() * (7 - 0 + 1)) + 0;\r\n            let ch = instantiate(this.bricksPrefab);\r\n            console.log(ch);\r\n            ch.getComponent(Sprite).spriteFrame = this.NormalBricks[x];\r\n            this.node.addChild(ch);\r\n            ch.setPosition(new Vec3(0,i*43,1));\r\n        }\r\n    }\r\n    // update (deltaTime: number) {\r\n    //     // [4]\r\n    // }\r\n}\r\n\r\n"]}