{"version":3,"sources":["file:///Users/naushad/BricksBreaker/assets/Scripts/SingletonClass.ts"],"names":["SingletonClass","sys","constructor","_instance","Error","getInstance","setScore","value","_score","_eachlevelHighScore","_currLevel","localStorage","setItem","JSON","stringify","getScore","addPoints","setLevel","getLevel","increaseLevel","_levelsPlayed","setLevelPlayed","getLevelPlayed","level","Number","parseInt","getItem","getLevelHighScore","setLevelHighScore","highScore","getLevelStar","_eachlevelStar","setLevelStar","star","updateLevelHighScoreAndStar","getLevelHighScoreFromCache","getLevelStarFromCache","tempArr","i","length","p","push"],"mappings":";;;sBAEaA,c;;;;;;;;;AAFeC,MAAAA,G,OAAAA,G;;;;;;;gCAEfD,c,GAAN,MAAMA,cAAN,CAAqB;AASxBE,QAAAA,WAAW,GAAG;AAAA,0CANY,CAMZ;;AAAA,8CALgB,CAKhB;;AAAA,iDAJU,CAIV;;AAAA,uDAHgB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAGhB;;AAAA,kDAFW,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAEX;;AACV,cAAGF,cAAc,CAACG,SAAlB,EAA4B;AACxB,kBAAM,IAAIC,KAAJ,CAAU,8EAAV,CAAN;AACH;;AACDJ,UAAAA,cAAc,CAACG,SAAf,GAA2B,IAA3B;AACH;;AAEwB,eAAXE,WAAW,GACzB;AACI,iBAAOL,cAAc,CAACG,SAAtB;AACH;;AAEMG,QAAAA,QAAQ,CAACC,KAAD,EACf;AACI,eAAKC,MAAL,GAAcD,KAAd;;AACA,cAAGA,KAAK,GAAG,KAAKE,mBAAL,CAAyB,KAAKC,UAAL,GAAgB,CAAzC,CAAX,EACA;AACI,iBAAKD,mBAAL,CAAyB,KAAKC,UAAL,GAAgB,CAAzC,IAA8CH,KAA9C;AACAN,YAAAA,GAAG,CAACU,YAAJ,CAAiBC,OAAjB,CAAyB,iBAAzB,EAA2CC,IAAI,CAACC,SAAL,CAAe,KAAKL,mBAApB,CAA3C;AACH;AACJ;;AAEMM,QAAAA,QAAQ,GACf;AACI,iBAAO,KAAKP,MAAZ;AACH;;AAEMQ,QAAAA,SAAS,CAACT,KAAD,EAChB;AACI,eAAKC,MAAL,IAAeD,KAAf;AACH;;AAEMU,QAAAA,QAAQ,CAACV,KAAD,EACf;AACI,eAAKG,UAAL,GAAkBH,KAAlB;AACH;;AAEMW,QAAAA,QAAQ,GACf;AACI,iBAAO,KAAKR,UAAZ;AACH;;AAEMS,QAAAA,aAAa,GACpB;AACI,eAAKT,UAAL;;AACA,cAAG,KAAKA,UAAL,IAAiB,KAAKU,aAAzB,EACA;AACI,iBAAKA,aAAL,GAAqB,KAAKV,UAA1B;AACH;AACJ;;AAEMW,QAAAA,cAAc,CAACd,KAAD,EACrB;AACI,eAAKa,aAAL,GAAqBb,KAArB;AACAN,UAAAA,GAAG,CAACU,YAAJ,CAAiBC,OAAjB,CAAyB,cAAzB,EAA2C,GAAE,KAAKQ,aAAc,EAAhE;AACH;;AAEME,QAAAA,cAAc,GACrB;AACI,cAAIC,KAAK,GAAGC,MAAM,CAACC,QAAP,CAAgBxB,GAAG,CAACU,YAAJ,CAAiBe,OAAjB,CAAyB,cAAzB,CAAhB,CAAZ;AACA,iBAAOH,KAAP;AACH;;AAEMI,QAAAA,iBAAiB,GACxB;AACI,iBAAO,KAAKlB,mBAAL,CAAyB,KAAKC,UAAL,GAAgB,CAAzC,CAAP;AACH;;AAEMkB,QAAAA,iBAAiB,CAACC,SAAD,EACxB;AACI,cAAGA,SAAS,GAAG,KAAKpB,mBAAL,CAAyB,KAAKC,UAAL,GAAgB,CAAzC,CAAf,EACA;AACI,iBAAKD,mBAAL,CAAyB,KAAKC,UAAL,GAAgB,CAAzC,IAA8CmB,SAA9C;AACA5B,YAAAA,GAAG,CAACU,YAAJ,CAAiBC,OAAjB,CAAyB,iBAAzB,EAA2CC,IAAI,CAACC,SAAL,CAAe,KAAKL,mBAApB,CAA3C;AACH;AACJ;;AAEMqB,QAAAA,YAAY,CAACP,KAAD,EACnB;AACI,iBAAO,KAAKQ,cAAL,CAAoBR,KAAK,GAAC,CAA1B,CAAP;AACH;;AAEMS,QAAAA,YAAY,CAACC,IAAD,EACnB;AACI,cAAGA,IAAI,GAAG,KAAKF,cAAL,CAAoB,KAAKrB,UAAL,GAAgB,CAApC,CAAV,EACA;AACI,iBAAKqB,cAAL,CAAoB,KAAKrB,UAAL,GAAgB,CAApC,IAAyCuB,IAAzC;AACAhC,YAAAA,GAAG,CAACU,YAAJ,CAAiBC,OAAjB,CAAyB,aAAzB,EAAuCC,IAAI,CAACC,SAAL,CAAe,KAAKL,mBAApB,CAAvC;AACH;AACJ;;AAEMyB,QAAAA,2BAA2B,GAClC;AACI,cAAIC,0BAA0B,GAAGlC,GAAG,CAACU,YAAJ,CAAiBe,OAAjB,CAAyB,iBAAzB,CAAjC;AACA,cAAIU,qBAAqB,GAAGnC,GAAG,CAACU,YAAJ,CAAiBe,OAAjB,CAAyB,aAAzB,CAA5B;;AACA,cAAGS,0BAAH,EACA;AACI,gBAAIE,OAAkB,GAAG,EAAzB;;AACA,iBAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACH,0BAA0B,CAACI,MAAzC,EAAgDD,CAAC,EAAjD,EACA;AACI,kBAAIE,CAAC,GAAGf,QAAQ,CAACU,0BAA0B,CAACG,CAAD,CAA3B,CAAhB;;AACA,kBAAGE,CAAC,IAAE,CAAN,EACA;AACIH,gBAAAA,OAAO,CAACI,IAAR,CAAaD,CAAb;AACH;AACJ;;AACD,iBAAK/B,mBAAL,GAA2B4B,OAA3B;AACH;;AAED,cAAGD,qBAAH,EACA;AACI,gBAAIC,OAAkB,GAAG,EAAzB;;AACA,iBAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,qBAAqB,CAACG,MAApC,EAA2CD,CAAC,EAA5C,EACA;AACI,kBAAIE,CAAC,GAAGf,QAAQ,CAACW,qBAAqB,CAACE,CAAD,CAAtB,CAAhB;;AACA,kBAAGE,CAAC,IAAE,CAAN,EACA;AACIH,gBAAAA,OAAO,CAACI,IAAR,CAAaD,CAAb;AACH;AACJ;;AACD,iBAAKT,cAAL,GAAsBM,OAAtB;AACH;AAEJ;;AApIuB,O;;sBAAfrC,c,eAEiC,IAAIA,cAAJ,E","sourcesContent":["import { JsonAsset, Prefab, sys } from \"cc\";\r\n\r\nexport class SingletonClass {\r\n\r\n    private static _instance:SingletonClass = new SingletonClass();\r\n    private _score : number = 0;\r\n    private _currLevel : number = 1;\r\n    private _levelsPlayed = 1;\r\n    private _eachlevelHighScore = [0,0,0,0,0,0];\r\n    private _eachlevelStar = [1,0,0,0,0,0];\r\n\r\n    constructor() {\r\n        if(SingletonClass._instance){\r\n            throw new Error(\"Error: Instantiation failed: Use SingletonDemo.getInstance() instead of new.\");\r\n        }\r\n        SingletonClass._instance = this;\r\n    }\r\n\r\n    public static getInstance():SingletonClass\r\n    {              \r\n        return SingletonClass._instance;\r\n    }\r\n\r\n    public setScore(value:number):void\r\n    {\r\n        this._score = value;\r\n        if(value > this._eachlevelHighScore[this._currLevel-1])\r\n        {\r\n            this._eachlevelHighScore[this._currLevel-1] = value;\r\n            sys.localStorage.setItem('level_highScore',JSON.stringify(this._eachlevelHighScore));\r\n        }\r\n    }\r\n\r\n    public getScore():number\r\n    {\r\n        return this._score;\r\n    }\r\n\r\n    public addPoints(value:number):void\r\n    {\r\n        this._score += value;\r\n    }\r\n    \r\n    public setLevel(value:number):void\r\n    {\r\n        this._currLevel = value;\r\n    }\r\n\r\n    public getLevel():number\r\n    {\r\n        return this._currLevel;\r\n    }\r\n\r\n    public increaseLevel():void\r\n    {\r\n        this._currLevel++;\r\n        if(this._currLevel>=this._levelsPlayed)\r\n        {\r\n            this._levelsPlayed = this._currLevel;\r\n        }\r\n    }\r\n\r\n    public setLevelPlayed(value : number):void\r\n    {\r\n        this._levelsPlayed = value;\r\n        sys.localStorage.setItem('level_played' , `${this._levelsPlayed}`);\r\n    }\r\n\r\n    public getLevelPlayed():number\r\n    {\r\n        let level = Number.parseInt(sys.localStorage.getItem('level_played'));\r\n        return level;\r\n    }\r\n\r\n    public getLevelHighScore():number\r\n    {\r\n        return this._eachlevelHighScore[this._currLevel-1];\r\n    }\r\n\r\n    public setLevelHighScore(highScore : number):void\r\n    {\r\n        if(highScore > this._eachlevelHighScore[this._currLevel-1])\r\n        {\r\n            this._eachlevelHighScore[this._currLevel-1] = highScore;\r\n            sys.localStorage.setItem('level_highScore',JSON.stringify(this._eachlevelHighScore));\r\n        }\r\n    }\r\n\r\n    public getLevelStar(level : number):number\r\n    {\r\n        return this._eachlevelStar[level-1];\r\n    }\r\n\r\n    public setLevelStar(star : number):void\r\n    {\r\n        if(star > this._eachlevelStar[this._currLevel-1])\r\n        {\r\n            this._eachlevelStar[this._currLevel-1] = star;\r\n            sys.localStorage.setItem('level_stars',JSON.stringify(this._eachlevelHighScore));\r\n        }\r\n    }\r\n\r\n    public updateLevelHighScoreAndStar():void\r\n    {\r\n        let getLevelHighScoreFromCache = sys.localStorage.getItem('level_highScore');\r\n        let getLevelStarFromCache = sys.localStorage.getItem('level_stars');\r\n        if(getLevelHighScoreFromCache)\r\n        {    \r\n            let tempArr : number[] = [];\r\n            for(let i=0;i<getLevelHighScoreFromCache.length;i++)\r\n            {\r\n                let p = parseInt(getLevelHighScoreFromCache[i]);\r\n                if(p>=0)\r\n                {\r\n                    tempArr.push(p);\r\n                }\r\n            }\r\n            this._eachlevelHighScore = tempArr;\r\n        }\r\n\r\n        if(getLevelStarFromCache)\r\n        {    \r\n            let tempArr : number[] = [];\r\n            for(let i=0;i<getLevelStarFromCache.length;i++)\r\n            {\r\n                let p = parseInt(getLevelStarFromCache[i]);\r\n                if(p>=0)\r\n                {\r\n                    tempArr.push(p);\r\n                }\r\n            }\r\n            this._eachlevelStar = tempArr;\r\n        }\r\n\r\n    }\r\n}"]}