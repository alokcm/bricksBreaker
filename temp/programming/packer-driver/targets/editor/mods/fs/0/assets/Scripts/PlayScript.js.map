{"version":3,"sources":["file:///Users/naushad/BricksBreaker/assets/Scripts/PlayScript.ts"],"names":["_decorator","Component","Node","Sprite","Vec3","SpriteFrame","Prefab","instantiate","JsonAsset","Collider2D","Contact2DType","RigidBody2D","UITransform","Vec2","Intersection2D","Label","director","Button","SingletonClass","ccclass","property","LevelManager","getInstance","BRICKS","PlayScript","getLevel","onLoad","sliderSprite","on","EventType","TOUCH_MOVE","moveSliderOnTouch","start","posOfSlider","getPosition","screenWidth","node","width","tileDetails","asset","level","json","wallLeft","getChildByName","wallRight","wallTop","setScale","getComponent","height","fetchScript","addBricks","scoreLabel","ballInitialPosition","ball","gameOverPopUp","active","levelEndPopUp","gameOverHome","TOUCH_END","moveToHome","levelEndHome","gameOverRestart","restartTheSameLevel","levelEndRestart","levelEndNext","loadNextLevel","console","log","setScore","score","resetChances","i","arrayOfChances","length","p","pop","removeFromParent","event","loadScene","arrayOfBricksOnScreen","forEach","element","setTimeout","increaseLevel","onBeginContactTry","selfCollider","otherCollider","contact","showGameOverPopUp","gameOverScore","string","getScore","gameOverHighScore","clearInterval","intervalID","showlevelEndPopUp","LevelEndScore","LevelEndHighScore","lev","rows","columns","maxNumberOfBall","startXPos","startYPos","bricksWidthTemp","bricksHeightTemp","bricksPrefab","data","scaleFactor","balltemp","ballPrefab","addChild","ballNode","collider","addChances","BEGIN_CONTACT","onBeginContact","x","y","b","ballForChances","setPosition","push","onEndContact","name","updateBricks","addLevel","brickTime","spriteFrame","BrokenBricks","colorNumber","destroy","reward","randomRewards","Math","floor","random","currBricksPos","rew","rewardsPrefab","Rewards","arrayOfRewards","touch","current","getUILocation","update","rectRect","getBoundingBoxToWorld","removeReward","shift","linearVelocity","angularVelocity","tempball","getSiblingIndex","setLevelPlayed","type","posX","posY","ch","NormalBricks","IN_TWO_COLLISION","IN_FOUR_COLLISION","HAS_REWARDS","setSiblingIndex","setInterval","timer"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, SpriteComponent, Sprite, Vec3, UIComponent, UIModelComponent, SpriteFrame, Prefab, instantiate, JsonAsset, Collider2D, Contact2DType, IPhysics2DContact, PhysicsSystem2D, RigidBody, RigidBody2D, UITransform, rect, Vec2, Slider, Intersection2D, Label, director, Button } from 'cc';\r\nimport { SingletonClass } from './SingletonClass';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\nvar LevelManager:SingletonClass = SingletonClass.getInstance();\r\n\r\n/**\r\n * Predefined variables\r\n * Name = PlayScript\r\n * DateTime = Wed Sep 22 2021 13:48:26 GMT+0530 (India Standard Time)\r\n * Author = alokraj0024\r\n * FileBasename = PlayScript.ts\r\n * FileBasenameNoExtension = PlayScript\r\n * URL = db://assets/Scripts/PlayScript.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/en/\r\n * \r\n * Math.floor(Math.random() * (max - min + 1)) + min;\r\n * this.bg!.getComponent(UITransform)?.convertToNodeSpaceAR(pos);\r\n * let level=sys.localStorage.getItem('current_level');\r\n * sys.localStorage.setItem('current_level' , `${this.current_level}`);\r\n */\r\n\r\nenum BRICKS\r\n{\r\n    IN_TWO_COLLISION = 1,\r\n    IN_FOUR_COLLISION = 2,\r\n    HAS_REWARDS = 3\r\n}\r\n\r\n@ccclass('PlayScript')\r\nexport class PlayScript extends Component {\r\n\r\n\r\n\r\n    @property(Node)\r\n    sliderSprite : Node = null;\r\n\r\n    @property(Node)\r\n    ball : Node = null;\r\n\r\n    @property(SpriteFrame)\r\n    NormalBricks : SpriteFrame[] = [];\r\n\r\n    @property(SpriteFrame)\r\n    BrokenBricks : SpriteFrame[] = [];\r\n\r\n    @property(JsonAsset)\r\n    asset : JsonAsset[] = [];\r\n\r\n    @property(SpriteFrame)\r\n    Rewards : SpriteFrame[] = [];\r\n\r\n    @property(Prefab)\r\n    bricksPrefab : Prefab = null;\r\n\r\n    @property(Prefab)\r\n    rewardsPrefab : Prefab = null;\r\n\r\n    @property(Prefab)\r\n    ballPrefab : Prefab = null;\r\n\r\n    @property(Prefab)\r\n    ballForChances : Prefab = null;\r\n\r\n    @property(Node)\r\n    gameOverPopUp : Node = null;\r\n\r\n    @property(Node)\r\n    levelEndPopUp : Node = null;\r\n\r\n    @property(Button)\r\n    gameOverHome : Button = null;\r\n\r\n    @property(Button)\r\n    gameOverRestart : Button = null;\r\n\r\n    @property(Button)\r\n    levelEndHome : Button = null;\r\n\r\n    @property(Button)\r\n    levelEndRestart : Button = null;\r\n\r\n    @property(Button)\r\n    levelEndNext : Button = null;\r\n\r\n    @property(Label)\r\n    gameOverScore : Label = null;\r\n\r\n    @property(Label)\r\n    gameOverHighScore : Label = null;\r\n\r\n    @property(Label)\r\n    LevelEndScore : Label = null;\r\n\r\n    @property(Label)\r\n    LevelEndHighScore : Label = null;\r\n\r\n    @property(SpriteFrame)\r\n    yellowStar : SpriteFrame = null;\r\n\r\n    posOfSlider : Vec3 = null;\r\n    screenWidth : any;\r\n    tileDetails: string[] = [];\r\n    arrayOfBricksOnScreen : any[] = [];\r\n    ballInitialPosition : any;\r\n    rows : number = null;\r\n    columns : number = null;\r\n    level : number = LevelManager.getLevel();\r\n    ch : any;\r\n    startXPos : number = null;\r\n    startYPos : number = null;\r\n    bricksWidthTemp : number = null;\r\n    bricksHeightTemp : number = null;\r\n    scaleFactor : number = null;\r\n    arrayOfRewards : any[] = [];\r\n    maxNumberOfBall : number = null;\r\n    ballNode : Node = null;\r\n    collider : any = null;\r\n    addLevel : Boolean = false;\r\n    scoreLabel : any = null;\r\n    score : number = 0;\r\n    arrayOfChances : any[] = [];\r\n    timer : number = 0;\r\n    intervalID : any = null;\r\n\r\n    onLoad()\r\n    {\r\n        this.sliderSprite.on(Node.EventType.TOUCH_MOVE,this.moveSliderOnTouch,this);\r\n    }\r\n\r\n    start () {\r\n        this.posOfSlider = this.sliderSprite.getPosition();\r\n        this.screenWidth = this.node.width;\r\n        this.tileDetails = this.asset[this.level-1].json[\"tileDetails\"];\r\n        \r\n        let wallLeft = this.node.getChildByName('wallLeft');\r\n        let wallRight = this.node.getChildByName('wallRight');\r\n        let wallTop = this.node.getChildByName('wallTop');\r\n        wallLeft.setScale(1,this.node.getComponent(UITransform).height/1920);\r\n        wallRight.setScale(1,this.node.getComponent(UITransform).height/1920);\r\n        wallTop.setScale(this.screenWidth/1080,1);\r\n\r\n        this.fetchScript(this.level);\r\n        this.addBricks();\r\n\r\n        this.scoreLabel = this.node.getChildByName('score');\r\n        this.ballInitialPosition = this.ball.getPosition();\r\n\r\n        this.gameOverPopUp.active = false;\r\n        this.levelEndPopUp.active = false;\r\n        \r\n        this.gameOverHome.node.on(Node.EventType.TOUCH_END,this.moveToHome,this);\r\n        this.levelEndHome.node.on(Node.EventType.TOUCH_END,this.moveToHome,this);\r\n        this.gameOverRestart.node.on(Node.EventType.TOUCH_END,this.restartTheSameLevel,this);\r\n        this.levelEndRestart.node.on(Node.EventType.TOUCH_END,this.restartTheSameLevel,this);\r\n        this.levelEndNext.node.on(Node.EventType.TOUCH_END,this.loadNextLevel,this);\r\n        console.log('start called in playScript');\r\n        LevelManager.setScore(0);\r\n        this.score = 0;\r\n    }\r\n\r\n    resetChances()\r\n    {\r\n        for(let i =0;i<this.arrayOfChances.length;i++)\r\n                {\r\n                    let p = this.arrayOfChances.pop();\r\n                    p.removeFromParent();\r\n                }\r\n                this.arrayOfChances = [];\r\n        this.score = 0;\r\n    }\r\n    moveToHome(event)\r\n    {\r\n        director.loadScene('levelScreenNew');\r\n    }\r\n\r\n    restartTheSameLevel(event)\r\n    {\r\n        this.resetChances();\r\n        this.arrayOfBricksOnScreen.forEach((element) => {\r\n            element.removeFromParent();\r\n        });\r\n        this.arrayOfBricksOnScreen = [];\r\n\r\n        this.fetchScript(LevelManager.getLevel());\r\n        this.addBricks();\r\n\r\n        setTimeout(() => {\r\n            this.gameOverPopUp.active = false;\r\n            this.levelEndPopUp.active = false;\r\n        },100);\r\n    }\r\n\r\n    loadNextLevel()\r\n    {\r\n        LevelManager.increaseLevel();\r\n        this.resetChances();\r\n        this.fetchScript(LevelManager.getLevel());\r\n        this.addBricks();\r\n        setTimeout(() => {\r\n            this.gameOverPopUp.active = false;\r\n            this.levelEndPopUp.active = false;\r\n        },100);\r\n    }\r\n\r\n    onBeginContactTry(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null)\r\n    {\r\n        console.log(otherCollider);\r\n    }\r\n\r\n    showGameOverPopUp()\r\n    {\r\n        this.gameOverScore.getComponent(Label).string = `${LevelManager.getScore()}`;\r\n        this.gameOverHighScore.getComponent(Label).string = `${LevelManager.getScore()}`;\r\n        this.gameOverPopUp.active = true;\r\n        clearInterval(this.intervalID);\r\n    }\r\n\r\n    showlevelEndPopUp()\r\n    {\r\n        this.LevelEndScore.getComponent(Label).string = `${LevelManager.getScore()}`;\r\n        this.LevelEndHighScore.getComponent(Label).string = `${LevelManager.getScore()}`;\r\n        this.levelEndPopUp.active = true;\r\n        clearInterval(this.intervalID);\r\n    }\r\n\r\n    fetchScript(lev : number)\r\n    {\r\n        this.tileDetails = this.asset[lev-1].json[\"tileDetails\"];\r\n        this.rows = this.asset[lev-1].json[\"rows\"];\r\n        this.columns = this.asset[lev-1].json[\"columns\"];\r\n        this.maxNumberOfBall = this.asset[lev-1].json[\"maxBall\"];\r\n\r\n        this.startXPos = -((this.screenWidth)/2);\r\n        this.startYPos = (((this.node.getComponent(UITransform).height)/2));\r\n        this.bricksWidthTemp = this.screenWidth/this.columns;\r\n        this.bricksHeightTemp = (this.bricksPrefab.data.height * this.bricksWidthTemp)/this.bricksPrefab.data.width;\r\n        this.startXPos  += this.bricksWidthTemp/2;\r\n        this.startYPos -= this.bricksHeightTemp/2;\r\n        this.scaleFactor = this.bricksWidthTemp/this.bricksPrefab.data.width;\r\n        this.bricksPrefab.data.setScale(this.scaleFactor,this.scaleFactor);\r\n        console.log(this.ballInitialPosition);\r\n        let balltemp = instantiate(this.ballPrefab);\r\n        this.node.addChild(balltemp);\r\n        this.ballNode = balltemp;\r\n        console.log(this.ballNode);\r\n        this.collider = this.ballNode.getComponent(Collider2D);\r\n        this.addChances();\r\n        if(this.collider)\r\n        {\r\n            this.collider.on(Contact2DType.BEGIN_CONTACT,this.onBeginContact,this);\r\n            //this.collider.on(Contact2DType.END_CONTACT,this.onEndContact,this);\r\n        }\r\n        //this.scoreLabel.getComponent(Label).string = `score : ${LevelManager.getScore()}`;\r\n    }\r\n\r\n    addChances()\r\n    {\r\n        let x = -((this.screenWidth)/2);\r\n        let y = -(((this.node.getComponent(UITransform).height)/2));\r\n        x+=38;\r\n        y+=38;\r\n        for(let i =1;i<this.maxNumberOfBall;i++)\r\n        {\r\n            console.log('loop called');\r\n            let b = instantiate(this.ballForChances);\r\n            this.node.addChild(b);\r\n            b.setPosition(new Vec3(x,y,1));\r\n            this.arrayOfChances.push(b);\r\n            x+=76;\r\n        }\r\n        console.log('addchances called');\r\n    }\r\n    \r\n    onEndContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null)\r\n    {\r\n        if(this.arrayOfBricksOnScreen.length == 0)\r\n        {\r\n            //this.ballNode.getComponent(Sprite).destroy();\r\n            this.ballNode.removeFromParent();\r\n        }\r\n    }\r\n\r\n    onBeginContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) \r\n    {\r\n        console.log(this.ball.getPosition());\r\n        if(otherCollider.name == 'brick<BoxCollider2D>')\r\n        {\r\n            this.updateBricks(otherCollider);\r\n        }\r\n\r\n        if(this.arrayOfBricksOnScreen.length == 0)\r\n        {\r\n            this.addLevel = true;\r\n        }\r\n    }\r\n\r\n    updateBricks(collider)\r\n    {\r\n        collider.node.brickTime--;\r\n        if(collider.node.brickTime == 1)\r\n        {\r\n            collider.getComponent(Sprite).spriteFrame = this.BrokenBricks[collider.node.colorNumber];\r\n        }\r\n        if(collider.node.brickTime == 0)\r\n        {\r\n            collider.getComponent(Sprite).destroy();\r\n\r\n            if(collider.node.reward == true)\r\n            {\r\n                let randomRewards = Math.floor(Math.random() * (4 - 0 + 1)) + 0;\r\n                let currBricksPos = collider.node.getPosition();\r\n                console.log(currBricksPos);\r\n                let rew = instantiate(this.rewardsPrefab);\r\n                this.node.addChild(rew);\r\n                rew.setPosition(new Vec3(currBricksPos));\r\n                rew.getComponent(Sprite).spriteFrame = this.Rewards[randomRewards];\r\n                this.arrayOfRewards.push(rew);\r\n            }\r\n            this.arrayOfBricksOnScreen.pop();\r\n            collider.destroy();\r\n            this.score += 2;\r\n            this.scoreLabel.getComponent(Label).string = `score : ${this.score}`;\r\n        }\r\n    }\r\n\r\n    moveSliderOnTouch(touch,event)\r\n    {\r\n        let current = touch.getUILocation();\r\n        if(current.x+128>this.screenWidth)\r\n        {\r\n            current.x = this.screenWidth-128;\r\n        }\r\n        else if(current.x-128<0)\r\n        {\r\n            current.x = 128;\r\n        }\r\n        this.sliderSprite.setPosition(new Vec3(current.x-this.screenWidth/2,this.posOfSlider.y,1));\r\n    }\r\n\r\n    update()\r\n    {\r\n        this.arrayOfRewards.forEach(element => {\r\n            element.setPosition(element.getPosition().x,element.getPosition().y-10,1);\r\n\r\n            if(Intersection2D.rectRect(\r\n                element.getComponent(UITransform)?.getBoundingBoxToWorld(),\r\n                this.sliderSprite.getComponent(UITransform)?.getBoundingBoxToWorld()!\r\n                ))\r\n                {\r\n                    console.log('collided rewards and slider');\r\n                    let removeReward = this.arrayOfRewards.shift();\r\n                    removeReward.getComponent(Sprite).destroy();\r\n                    removeReward.destroy();\r\n                    console.log(this.arrayOfRewards);\r\n                    this.score += 10;\r\n                    this.scoreLabel.getComponent(Label).string = `score : ${this.score}`;\r\n                }\r\n        });\r\n\r\n        if(this.ballNode.getPosition().y < (-(this.node.getComponent(UITransform).height)))\r\n        {\r\n            console.log('ball is out of the screen');\r\n            this.maxNumberOfBall--;\r\n            console.log('chances left : ' + this.maxNumberOfBall);\r\n            if(this.maxNumberOfBall>=1)\r\n            {\r\n                this.ballNode.setPosition(this.ballInitialPosition);\r\n                this.ballNode.getComponent(RigidBody2D).linearVelocity = new Vec2(0,0);\r\n                this.ballNode.getComponent(RigidBody2D).angularVelocity = 0;\r\n                let tempball = this.arrayOfChances.pop();\r\n                tempball.removeFromParent();\r\n                console.log('one ball removed ');\r\n            }\r\n\r\n            else\r\n            {\r\n                this.ballNode.removeFromParent();\r\n\r\n                LevelManager.setScore(this.score);\r\n                \r\n                this.showGameOverPopUp();\r\n                console.log(this.gameOverPopUp.getSiblingIndex());\r\n                for(let i =0;i<this.arrayOfChances.length;i++)\r\n                {\r\n                    let p = this.arrayOfChances.pop();\r\n                    p.removeFromParent();\r\n                }\r\n                this.arrayOfChances = [];\r\n                console.log('game is over now ');\r\n            }\r\n        }\r\n\r\n        if(this.arrayOfBricksOnScreen.length == 0 && this.addLevel == true)\r\n        {\r\n            this.addLevel = false;\r\n            this.ballNode.removeFromParent();\r\n\r\n            this.level++;\r\n            if(this.level == 7)\r\n            {\r\n                this.level = 1;\r\n            }\r\n\r\n            LevelManager.setLevelPlayed(this.level);\r\n            LevelManager.setScore(this.score);\r\n\r\n            LevelManager.setScore(this.score);\r\n            clearInterval(this.intervalID);\r\n            this.showlevelEndPopUp();\r\n        }\r\n    }\r\n\r\n    addBricks()\r\n    {\r\n        for(let i=0;i<this.tileDetails.length;i++)\r\n        {\r\n            let type = this.tileDetails[i][\"type\"];\r\n            console.log(type);\r\n            let posX = this.startXPos + (Math.floor((this.tileDetails[i][\"index\"]%this.columns)) * this.bricksWidthTemp);\r\n            let posY = this.startYPos - (Math.floor((this.tileDetails[i][\"index\"]/this.columns)) * this.bricksHeightTemp);\r\n            console.log(posX,posY);\r\n            this.ch = instantiate(this.bricksPrefab);\r\n            this.node.addChild(this.ch);\r\n            this.ch.setPosition(new Vec3(posX,posY,1));\r\n            this.ch.getComponent(Sprite).spriteFrame = this.NormalBricks[this.tileDetails[i][\"color\"]-1];\r\n            this.ch.colorNumber = this.tileDetails[i][\"color\"]-1;\r\n            this.arrayOfBricksOnScreen.push(this.ch);\r\n            \r\n            switch(type)\r\n            {\r\n                case BRICKS.IN_TWO_COLLISION :\r\n                    this.ch.brickTime = 2;\r\n                    this.ch.reward = false;\r\n                    break;\r\n                case BRICKS.IN_FOUR_COLLISION :\r\n                    this.ch.brickTime = 4;\r\n                    this.ch.reward = false;\r\n                    break;\r\n                case BRICKS.HAS_REWARDS :\r\n                    this.ch.brickTime = 2;\r\n                    this.ch.reward = true;\r\n                    break;\r\n                default :\r\n                    console.log('No details for this bricks.');\r\n            }\r\n        }\r\n        console.log('last prefab : ' + this.ch.getSiblingIndex());\r\n        this.gameOverPopUp.setSiblingIndex(this.ch.getSiblingIndex()+5);\r\n        this.intervalID = setInterval( () =>{\r\n            this.timer++;\r\n            console.log(this.timer);\r\n        },1000);\r\n    }\r\n}"]}