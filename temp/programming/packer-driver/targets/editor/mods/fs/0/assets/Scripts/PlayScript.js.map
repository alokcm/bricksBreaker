{"version":3,"sources":["file:///Users/naushad/BricksBreaker/assets/Scripts/PlayScript.ts"],"names":["_decorator","Component","Node","Sprite","Vec3","SpriteFrame","Prefab","instantiate","JsonAsset","Collider2D","Contact2DType","RigidBody2D","UITransform","Vec2","Intersection2D","Label","ccclass","property","BRICKS","PlayScript","start","posOfSlider","sliderSprite","getPosition","screenWidth","node","width","tileDetails","asset","level","json","console","log","wallLeft","getChildByName","wallRight","wallTop","setScale","getComponent","height","fetchScript","ballInitialPosition","ball","addBricks","scoreLabel","onBeginContactTry","selfCollider","otherCollider","contact","lev","rows","columns","maxNumberOfBall","startXPos","startYPos","bricksWidthTemp","bricksHeightTemp","bricksPrefab","data","scaleFactor","balltemp","ballPrefab","addChild","ballNode","collider","addChances","on","BEGIN_CONTACT","onBeginContact","x","y","i","b","ballForChances","setPosition","arrayOfChances","push","onEndContact","arrayOfBricksOnScreen","length","removeFromParent","name","updateBricks","addLevel","brickTime","spriteFrame","BrokenBricks","colorNumber","destroy","reward","randomRewards","Math","floor","random","currBricksPos","rew","rewardsPrefab","Rewards","arrayOfRewards","pop","score","string","moveSliderOnTouch","touch","event","current","getUILocation","onLoad","EventType","TOUCH_MOVE","update","forEach","element","rectRect","getBoundingBoxToWorld","removeReward","shift","linearVelocity","tempball","temp","type","posX","posY","ch","NormalBricks","IN_TWO_COLLISION","IN_FOUR_COLLISION","HAS_REWARDS"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, SpriteComponent, Sprite, Vec3, UIComponent, UIModelComponent, SpriteFrame, Prefab, instantiate, JsonAsset, Collider2D, Contact2DType, IPhysics2DContact, PhysicsSystem2D, RigidBody, RigidBody2D, UITransform, rect, Vec2, Slider, Intersection2D, Label } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * Predefined variables\r\n * Name = PlayScript\r\n * DateTime = Wed Sep 22 2021 13:48:26 GMT+0530 (India Standard Time)\r\n * Author = alokraj0024\r\n * FileBasename = PlayScript.ts\r\n * FileBasenameNoExtension = PlayScript\r\n * URL = db://assets/Scripts/PlayScript.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/en/\r\n * Math.floor(Math.random() * (max - min + 1)) + min;\r\n */\r\n \r\nenum BRICKS\r\n{\r\n    IN_TWO_COLLISION = 1,\r\n    IN_FOUR_COLLISION = 2,\r\n    HAS_REWARDS = 3\r\n}\r\n\r\n@ccclass('PlayScript')\r\nexport class PlayScript extends Component {\r\n\r\n    @property(Node)\r\n    sliderSprite : Node = null;\r\n\r\n    @property(Node)\r\n    ball : Node = null;\r\n\r\n    @property(SpriteFrame)\r\n    NormalBricks : SpriteFrame[] = [];\r\n\r\n    @property(SpriteFrame)\r\n    BrokenBricks : SpriteFrame[] = [];\r\n\r\n    @property(JsonAsset)\r\n    asset : JsonAsset[] = [];\r\n\r\n    @property(SpriteFrame)\r\n    Rewards : SpriteFrame[] = [];\r\n\r\n    @property(Prefab)\r\n    bricksPrefab : Prefab = null;\r\n\r\n    @property(Prefab)\r\n    rewardsPrefab : Prefab = null;\r\n\r\n    @property(Prefab)\r\n    ballPrefab : Prefab = null;\r\n\r\n    @property(Prefab)\r\n    ballForChances : Prefab = null;\r\n\r\n    posOfSlider : Vec3 = null;\r\n    screenWidth : any;\r\n    tileDetails: string[] = [];\r\n    arrayOfBricksOnScreen : any[] = [];\r\n    ballInitialPosition : any;\r\n    rows : number = null;\r\n    columns : number = null;\r\n    level : number = 1;\r\n    ch : any;\r\n    startXPos : number = null;\r\n    startYPos : number = null;\r\n    bricksWidthTemp : number = null;\r\n    bricksHeightTemp : number = null;\r\n    scaleFactor : number = null;\r\n    arrayOfRewards : any[] = [];\r\n    maxNumberOfBall : number = null;\r\n    ballNode : Node = null;\r\n    collider : any = null;\r\n    addLevel : Boolean = false;\r\n    scoreLabel : any = null;\r\n    score : number = 0;\r\n    arrayOfChances : any[] = [];\r\n\r\n\r\n    start () {\r\n        this.posOfSlider = this.sliderSprite.getPosition();\r\n        this.screenWidth = this.node.width;\r\n        this.tileDetails = this.asset[this.level-1].json[\"tileDetails\"];\r\n        console.log(this.tileDetails);\r\n        console.log('row in the script  ' + this.asset[0].json[\"rows\"] + ' columns : ' + this.asset[0].json[\"columns\"]);\r\n        \r\n\r\n        let wallLeft = this.node.getChildByName('wallLeft');\r\n        let wallRight = this.node.getChildByName('wallRight');\r\n        let wallTop = this.node.getChildByName('wallTop');\r\n        wallLeft.setScale(1,this.node.getComponent(UITransform).height/1920);\r\n        wallRight.setScale(1,this.node.getComponent(UITransform).height/1920);\r\n        wallTop.setScale(this.screenWidth/1080,1);\r\n\r\n        this.fetchScript(this.level);\r\n        this.ballInitialPosition = this.ball.getPosition();\r\n        this.addBricks();\r\n        this.scoreLabel = this.node.getChildByName('score');\r\n    }\r\n\r\n    onBeginContactTry(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null)\r\n    {\r\n        console.log(otherCollider);\r\n    }\r\n\r\n    fetchScript(lev : number)\r\n    {\r\n        this.tileDetails = this.asset[lev-1].json[\"tileDetails\"];\r\n        this.rows = this.asset[lev-1].json[\"rows\"];\r\n        this.columns = this.asset[lev-1].json[\"columns\"];\r\n        this.maxNumberOfBall = this.asset[lev-1].json[\"maxBall\"];\r\n\r\n        this.startXPos = -((this.screenWidth)/2);\r\n        this.startYPos = (((this.node.getComponent(UITransform).height)/2));\r\n        this.bricksWidthTemp = this.screenWidth/this.columns;\r\n        this.bricksHeightTemp = (this.bricksPrefab.data.height * this.bricksWidthTemp)/this.bricksPrefab.data.width;\r\n        this.startXPos  += this.bricksWidthTemp/2;\r\n        this.startYPos -= this.bricksHeightTemp/2;\r\n        this.scaleFactor = this.bricksWidthTemp/this.bricksPrefab.data.width;\r\n        this.bricksPrefab.data.setScale(this.scaleFactor,this.scaleFactor);\r\n        console.log(this.ballInitialPosition);\r\n        \r\n        let balltemp = instantiate(this.ballPrefab);\r\n        this.node.addChild(balltemp);\r\n        this.ballNode = balltemp;\r\n        console.log(this.ballNode);\r\n        this.collider = this.ballNode.getComponent(Collider2D);\r\n        this.addChances();\r\n        if(this.collider)\r\n        {\r\n            this.collider.on(Contact2DType.BEGIN_CONTACT,this.onBeginContact,this);\r\n            //this.collider.on(Contact2DType.END_CONTACT,this.onEndContact,this);\r\n        }\r\n    }\r\n\r\n    addChances()\r\n    {\r\n        console.log('addchances called');\r\n        let x = -((this.screenWidth)/2);\r\n        let y = -(((this.node.getComponent(UITransform).height)/2));\r\n        x+=38;\r\n        y+=38;\r\n        for(let i =1;i<this.maxNumberOfBall;i++)\r\n        {\r\n            console.log('loop called');\r\n            let b = instantiate(this.ballForChances);\r\n            this.node.addChild(b);\r\n            b.setPosition(new Vec3(x,y,1));\r\n            this.arrayOfChances.push(b);\r\n            x+=76;\r\n        }\r\n    }\r\n    \r\n    onEndContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null)\r\n    {\r\n        if(this.arrayOfBricksOnScreen.length == 0)\r\n        {\r\n            //this.ballNode.getComponent(Sprite).destroy();\r\n            this.ballNode.removeFromParent();\r\n        }\r\n    }\r\n    onBeginContact (selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) \r\n    {\r\n        console.log(this.ball.getPosition());\r\n        if(otherCollider.name == 'brick<BoxCollider2D>')\r\n        {\r\n            this.updateBricks(otherCollider);\r\n        }\r\n\r\n        if(this.arrayOfBricksOnScreen.length == 0)\r\n        {\r\n            this.addLevel = true;\r\n        }\r\n    }\r\n\r\n    updateBricks(collider)\r\n    {\r\n        collider.node.brickTime--;\r\n        if(collider.node.brickTime == 1)\r\n        {\r\n            collider.getComponent(Sprite).spriteFrame = this.BrokenBricks[collider.node.colorNumber];\r\n        }\r\n        if(collider.node.brickTime == 0)\r\n        {\r\n            collider.getComponent(Sprite).destroy();\r\n\r\n            if(collider.node.reward == true)\r\n            {\r\n                let randomRewards = Math.floor(Math.random() * (4 - 0 + 1)) + 0;\r\n                let currBricksPos = collider.node.getPosition();\r\n                console.log(currBricksPos);\r\n                let rew = instantiate(this.rewardsPrefab);\r\n                this.node.addChild(rew);\r\n                rew.setPosition(new Vec3(currBricksPos));\r\n                rew.getComponent(Sprite).spriteFrame = this.Rewards[randomRewards];\r\n                this.arrayOfRewards.push(rew);\r\n            }\r\n            this.arrayOfBricksOnScreen.pop();\r\n            collider.destroy();\r\n            this.score += 2;\r\n            this.scoreLabel.getComponent(Label).string = `score : ${this.score}`;\r\n        }\r\n    }\r\n\r\n    moveSliderOnTouch(touch,event)\r\n    {\r\n        let current = touch.getUILocation();\r\n        if(current.x+128>this.screenWidth)\r\n        {\r\n            current.x = this.screenWidth-128;\r\n        }\r\n        else if(current.x-128<0)\r\n        {\r\n            current.x = 128;\r\n        }\r\n        this.sliderSprite.setPosition(new Vec3(current.x-this.screenWidth/2,this.posOfSlider.y,1));\r\n    }\r\n\r\n    onLoad()\r\n    {\r\n        this.sliderSprite.on(Node.EventType.TOUCH_MOVE,this.moveSliderOnTouch,this);\r\n    }\r\n\r\n    update()\r\n    {\r\n        this.arrayOfRewards.forEach(element => {\r\n            element.setPosition(element.getPosition().x,element.getPosition().y-10,1);\r\n\r\n            if(Intersection2D.rectRect(\r\n                element.getComponent(UITransform)?.getBoundingBoxToWorld(),\r\n                this.sliderSprite.getComponent(UITransform)?.getBoundingBoxToWorld()!\r\n                ))\r\n                {\r\n                    console.log('collided rewards and slider');\r\n                    let removeReward = this.arrayOfRewards.shift();\r\n                    removeReward.getComponent(Sprite).destroy();\r\n                    removeReward.destroy();\r\n                    console.log(this.arrayOfRewards);\r\n                    this.score += 10;\r\n                    this.scoreLabel.getComponent(Label).string = `score : ${this.score}`;\r\n                }\r\n        });\r\n\r\n        if(this.ballNode.getPosition().y < (-(this.node.getComponent(UITransform).height)))\r\n        {\r\n            console.log('ball is out of the screen');\r\n            this.maxNumberOfBall--;\r\n            if(this.maxNumberOfBall>=1)\r\n            {\r\n\r\n                this.ballNode.setPosition(this.ballInitialPosition);\r\n                this.ballNode.getComponent(RigidBody2D).linearVelocity = new Vec2(0,0);\r\n                // let newBall = instantiate(this.ballPrefab);\r\n                // this.node.addChild(newBall);\r\n                // this.ball = newBall;\r\n                let tempball = this.arrayOfChances.pop();\r\n                tempball.removeFromParent();\r\n            }\r\n            else\r\n            {\r\n                this.ballNode.removeFromParent();\r\n            }\r\n        }\r\n\r\n        if(this.arrayOfBricksOnScreen.length == 0 && this.addLevel == true)\r\n        {\r\n            this.addLevel = false;\r\n            this.ballNode.removeFromParent();\r\n            this.level++;\r\n            this.fetchScript(this.level);\r\n            this.addBricks();\r\n            if(this.level == 3)\r\n            {\r\n                this.level = 1;\r\n            }\r\n            for(let i = 1;i<this.arrayOfChances.length;i++)\r\n            {\r\n                let temp = this.arrayOfChances[i];\r\n                temp.removeFromParent();\r\n            }\r\n            this.arrayOfChances = [];\r\n        }\r\n    }\r\n\r\n    addBricks()\r\n    {\r\n        for(let i=0;i<this.tileDetails.length;i++)\r\n        {\r\n            let type = this.tileDetails[i][\"type\"];\r\n            console.log(type);\r\n            let posX = this.startXPos + (Math.floor((this.tileDetails[i][\"index\"]%this.columns)) * this.bricksWidthTemp);\r\n            let posY = this.startYPos - (Math.floor((this.tileDetails[i][\"index\"]/this.columns)) * this.bricksHeightTemp);\r\n            console.log(posX,posY);\r\n            this.ch = instantiate(this.bricksPrefab);\r\n            this.node.addChild(this.ch);\r\n            this.ch.setPosition(new Vec3(posX,posY,1));\r\n            this.ch.getComponent(Sprite).spriteFrame = this.NormalBricks[this.tileDetails[i][\"color\"]-1];\r\n            this.ch.colorNumber = this.tileDetails[i][\"color\"]-1;\r\n            this.arrayOfBricksOnScreen.push(this.ch);\r\n            switch(type)\r\n            {\r\n                case BRICKS.IN_TWO_COLLISION :\r\n                    this.ch.brickTime = 2;\r\n                    this.ch.reward = false;\r\n                    break;\r\n                case BRICKS.IN_FOUR_COLLISION :\r\n                    this.ch.brickTime = 4;\r\n                    this.ch.reward = false;\r\n                    break;\r\n                case BRICKS.HAS_REWARDS :\r\n                    this.ch.brickTime = 2;\r\n                    this.ch.reward = true;\r\n                    break;\r\n                default :\r\n                    console.log('No details for this bricks.');\r\n            }\r\n        }\r\n    }\r\n}"]}